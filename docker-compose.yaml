
services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SCHEMA=${DB_SCHEMA}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
  pgadmin:
    #    To connect to the database, you need to use the following credentials:
    #     host.docker.internal
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      #      Use the following credentials to log in:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - app-network
    depends_on:
      - db

  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
    networks:
      - app-network

#  app:
#    image: 'store:latest'
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: store
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/store?currentSchema=store
#      - SPRING_DATASOURCE_USERNAME=${DB_USER}
#      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
#      - SPRING_DATASOURCE_SCHEMA=${DB_SCHEMA}
#
#    ports:
#      - '8080:8080'
#      - '9090:9090'   # for Actuator
#    depends_on:
#      - db
#    networks:
#      - app-network
#    entrypoint: [ "/bin/sh", "-c", "./wait-for db:5432", "java","-jar","/store.jar" ]


volumes:
  pgadmin:
  dragonflydata:
  db:
    driver: local

networks:
  app-network:
    driver: bridge